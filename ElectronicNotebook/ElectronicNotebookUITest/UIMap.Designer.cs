// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ElectronicNotebookUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public partial class UIMap
    {
        
        /// <summary>
        /// existAppointmentTitle - Use 'existAppointmentTitleExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existAppointmentTitle()
        {
            #region Variable Declarations
            WinText uIAgendaElectrónicaGooText = this.UINuevapestañaGoogleChWindow.UICitasPróximasGroup.UIAgendaElectrónicaGooText;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' label equals 'True'
            Assert.AreEqual(this.existAppointmentTitleExpectedValues.UIAgendaElectrónicaGooTextExists, uIAgendaElectrónicaGooText.Exists, "Upcoming appointment title does not exist");
        }
        
        /// <summary>
        /// existDateColumn - Use 'existDateColumnExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existDateColumn()
        {
            #region Variable Declarations
            WinColumnHeader uIAgendaElectrónicaGooColumnHeader = this.UINuevapestañaGoogleChWindow.UIItemTable.UIItemRow.UIAgendaElectrónicaGooColumnHeader;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' column header equals 'True'
            Assert.AreEqual(this.existDateColumnExpectedValues.UIAgendaElectrónicaGooColumnHeaderExists, uIAgendaElectrónicaGooColumnHeader.Exists, "Column Fecha does not exist on Appointment list");
        }
        
        /// <summary>
        /// existHiperLinkPaginaPrincipal - Use 'existHiperLinkPaginaPrincipalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existHiperLinkPaginaPrincipal()
        {
            #region Variable Declarations
            WinText uIAgendaElectrónicaGooText = this.UINuevapestañaGoogleChWindow.UIPáginaprincipalHyperlink.UIAgendaElectrónicaGooText;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' label equals 'True'
            Assert.AreEqual(this.existHiperLinkPaginaPrincipalExpectedValues.UIAgendaElectrónicaGooTextExists, uIAgendaElectrónicaGooText.Exists, "Página principal does not exist");
        }
        
        /// <summary>
        /// existHiperLinkRegistrarCita - Use 'existHiperLinkRegistrarCitaExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existHiperLinkRegistrarCita()
        {
            #region Variable Declarations
            WinText uIAgendaElectrónicaGooText = this.UINuevapestañaGoogleChWindow.UIRegistrarcitaHyperlink.UIAgendaElectrónicaGooText;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' label equals 'True'
            Assert.AreEqual(this.existHiperLinkRegistrarCitaExpectedValues.UIAgendaElectrónicaGooTextExists, uIAgendaElectrónicaGooText.Exists, "HiperLink Registrar Cita does not exist");
        }
        
        /// <summary>
        /// existHiperLinkRegistrarPaciente - Use 'existHiperLinkRegistrarPacienteExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existHiperLinkRegistrarPaciente()
        {
            #region Variable Declarations
            WinText uIAgendaElectrónicaGooText = this.UINuevapestañaGoogleChWindow.UIRegistrarpacienteHyperlink.UIAgendaElectrónicaGooText;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' label equals 'True'
            Assert.AreEqual(this.existHiperLinkRegistrarPacienteExpectedValues.UIAgendaElectrónicaGooTextExists, uIAgendaElectrónicaGooText.Exists, "The hiperLing Registrar paciente does not exist");
        }
        
        /// <summary>
        /// existHomePageTitle - Use 'existHomePageTitleExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existHomePageTitle()
        {
            #region Variable Declarations
            WinText uIAgendaElectrónicaGooText = this.UINuevapestañaGoogleChWindow.UIIniciodeSesiónGroup.UIAgendaElectrónicaGooText;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' label equals 'True'
            Assert.AreEqual(this.existHomePageTitleExpectedValues.UIAgendaElectrónicaGooTextExists, uIAgendaElectrónicaGooText.Exists, "The home page title does not exist");
        }
        
        /// <summary>
        /// existIdInput - Use 'existIdInputExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existIdInput()
        {
            #region Variable Declarations
            WinSpinner uIAgendaElectrónicaGooSpinner = this.UINuevapestañaGoogleChWindow.UIItemGroup.UIAgendaElectrónicaGooSpinner;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' spinner equals 'True'
            Assert.AreEqual(this.existIdInputExpectedValues.UIAgendaElectrónicaGooSpinnerExists, uIAgendaElectrónicaGooSpinner.Exists, "The input to write the ID does not exist");
        }
        
        /// <summary>
        /// existLogInButton - Use 'existLogInButtonExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existLogInButton()
        {
            #region Variable Declarations
            WinButton uIAgendaElectrónicaGooButton = this.UINuevapestañaGoogleChWindow.UIItemGroup.UIAgendaElectrónicaGooButton;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' button equals 'True'
            Assert.AreEqual(this.existLogInButtonExpectedValues.UIAgendaElectrónicaGooButtonExists, uIAgendaElectrónicaGooButton.Exists, "The Login button does not exist");
        }
        
        /// <summary>
        /// existPacientNameColumn - Use 'existPacientNameColumnExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existPacientNameColumn()
        {
            #region Variable Declarations
            WinColumnHeader uIAgendaElectrónicaGooColumnHeader2 = this.UINuevapestañaGoogleChWindow.UIItemTable.UIItemRow.UIAgendaElectrónicaGooColumnHeader2;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' column header equals 'True'
            Assert.AreEqual(this.existPacientNameColumnExpectedValues.UIAgendaElectrónicaGooColumnHeader2Exists, uIAgendaElectrónicaGooColumnHeader2.Exists, "Column pacient name does not exist");
        }
        
        /// <summary>
        /// existPasswordInput - Use 'existPasswordInputExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existPasswordInput()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UINuevapestañaGoogleChWindow.UIItemGroup.UIItemEdit;
            #endregion

            // Verify that the 'Exists' property of text box equals 'True'
            Assert.AreEqual(this.existPasswordInputExpectedValues.UIItemEditExists, uIItemEdit.Exists, "The input to write the password does not exist");
        }
        
        /// <summary>
        /// existProfessionalColumnName - Use 'existProfessionalColumnNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existProfessionalColumnName()
        {
            #region Variable Declarations
            WinColumnHeader uIAgendaElectrónicaGooColumnHeader3 = this.UINuevapestañaGoogleChWindow.UIItemTable.UIItemRow.UIAgendaElectrónicaGooColumnHeader3;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' column header equals 'True'
            Assert.AreEqual(this.existProfessionalColumnNameExpectedValues.UIAgendaElectrónicaGooColumnHeader3Exists, uIAgendaElectrónicaGooColumnHeader3.Exists, "Professional column name does not exist");
        }
        
        /// <summary>
        /// existTimeColumn - Use 'existTimeColumnExpectedValues' to pass parameters into this method.
        /// </summary>
        public void existTimeColumn()
        {
            #region Variable Declarations
            WinColumnHeader uIAgendaElectrónicaGooColumnHeader1 = this.UINuevapestañaGoogleChWindow.UIItemTable.UIItemRow.UIAgendaElectrónicaGooColumnHeader1;
            #endregion

            // Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' column header equals 'True'
            Assert.AreEqual(this.existTimeColumnExpectedValues.UIAgendaElectrónicaGooColumnHeader1Exists, uIAgendaElectrónicaGooColumnHeader1.Exists, "Column time does not exist on appointment list");
        }
        
        /// <summary>
        /// login - Use 'loginParams' to pass parameters into this method.
        /// </summary>
        public void login()
        {
            #region Variable Declarations
            WinEdit uIBarradedireccionesydEdit = this.UINuevapestañaGoogleChWindow.UIItemGroup.UIBarradedireccionesydEdit;
            WinControl uIChromeLegacyWindowDocument = this.UINuevapestañaGoogleChWindow.UIChromeLegacyWindowWindow13.UIChromeLegacyWindowDocument;
            #endregion

            // Launch '%ProgramFiles(x86)%\Google\Chrome\Application\chrome.exe'
            ApplicationUnderTest uINuevapestañaGoogleChWindow = ApplicationUnderTest.Launch(this.loginParams.UINuevapestañaGoogleChWindowExePath, this.loginParams.UINuevapestañaGoogleChWindowAlternateExePath);

            // Type 'localhost/ElectronicNotebook/' in 'Barra de direcciones y de búsqueda' text box
            uIBarradedireccionesydEdit.Text = this.loginParams.UIBarradedireccionesydEditText;

            // Type '{Enter}' in 'Barra de direcciones y de búsqueda' text box
            Keyboard.SendKeys(uIBarradedireccionesydEdit, this.loginParams.UIBarradedireccionesydEditSendKeys, ModifierKeys.None);

            // Type '{Tab}{Tab}{Tab}{Tab}{Tab}{Tab}{Tab}{Enter}' in 'Chrome Legacy Window' document
            Keyboard.SendKeys(uIChromeLegacyWindowDocument, this.loginParams.UIChromeLegacyWindowDocumentSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// The Web Browser is opened and is navigate towards home page of Electronic Notebook
        /// </summary>
        public void openApplicationHomePage()
        {
            #region Variable Declarations
            WinEdit uIBarradedireccionesydEdit = this.UINuevapestañaGoogleChWindow.UIItemGroup.UIBarradedireccionesydEdit;
            #endregion

            // Launch '%ProgramFiles(x86)%\Google\Chrome\Application\chrome.exe'
            ApplicationUnderTest uINuevapestañaGoogleChWindow = ApplicationUnderTest.Launch(this.openApplicationHomePageParams.UINuevapestañaGoogleChWindowExePath, this.openApplicationHomePageParams.UINuevapestañaGoogleChWindowAlternateExePath);

            // Type 'localhost/ElectronicNotebook/' in 'Barra de direcciones y de búsqueda' text box
            uIBarradedireccionesydEdit.Text = this.openApplicationHomePageParams.UIBarradedireccionesydEditText;

            // Type '{Enter}' in 'Barra de direcciones y de búsqueda' text box
            Keyboard.SendKeys(uIBarradedireccionesydEdit, this.openApplicationHomePageParams.UIBarradedireccionesydEditSendKeys, ModifierKeys.None);
        }
        
        #region Properties
        public virtual existAppointmentTitleExpectedValues existAppointmentTitleExpectedValues
        {
            get
            {
                if ((this.mexistAppointmentTitleExpectedValues == null))
                {
                    this.mexistAppointmentTitleExpectedValues = new existAppointmentTitleExpectedValues();
                }
                return this.mexistAppointmentTitleExpectedValues;
            }
        }
        
        public virtual existDateColumnExpectedValues existDateColumnExpectedValues
        {
            get
            {
                if ((this.mexistDateColumnExpectedValues == null))
                {
                    this.mexistDateColumnExpectedValues = new existDateColumnExpectedValues();
                }
                return this.mexistDateColumnExpectedValues;
            }
        }
        
        public virtual existHiperLinkPaginaPrincipalExpectedValues existHiperLinkPaginaPrincipalExpectedValues
        {
            get
            {
                if ((this.mexistHiperLinkPaginaPrincipalExpectedValues == null))
                {
                    this.mexistHiperLinkPaginaPrincipalExpectedValues = new existHiperLinkPaginaPrincipalExpectedValues();
                }
                return this.mexistHiperLinkPaginaPrincipalExpectedValues;
            }
        }
        
        public virtual existHiperLinkRegistrarCitaExpectedValues existHiperLinkRegistrarCitaExpectedValues
        {
            get
            {
                if ((this.mexistHiperLinkRegistrarCitaExpectedValues == null))
                {
                    this.mexistHiperLinkRegistrarCitaExpectedValues = new existHiperLinkRegistrarCitaExpectedValues();
                }
                return this.mexistHiperLinkRegistrarCitaExpectedValues;
            }
        }
        
        public virtual existHiperLinkRegistrarPacienteExpectedValues existHiperLinkRegistrarPacienteExpectedValues
        {
            get
            {
                if ((this.mexistHiperLinkRegistrarPacienteExpectedValues == null))
                {
                    this.mexistHiperLinkRegistrarPacienteExpectedValues = new existHiperLinkRegistrarPacienteExpectedValues();
                }
                return this.mexistHiperLinkRegistrarPacienteExpectedValues;
            }
        }
        
        public virtual existHomePageTitleExpectedValues existHomePageTitleExpectedValues
        {
            get
            {
                if ((this.mexistHomePageTitleExpectedValues == null))
                {
                    this.mexistHomePageTitleExpectedValues = new existHomePageTitleExpectedValues();
                }
                return this.mexistHomePageTitleExpectedValues;
            }
        }
        
        public virtual existIdInputExpectedValues existIdInputExpectedValues
        {
            get
            {
                if ((this.mexistIdInputExpectedValues == null))
                {
                    this.mexistIdInputExpectedValues = new existIdInputExpectedValues();
                }
                return this.mexistIdInputExpectedValues;
            }
        }
        
        public virtual existLogInButtonExpectedValues existLogInButtonExpectedValues
        {
            get
            {
                if ((this.mexistLogInButtonExpectedValues == null))
                {
                    this.mexistLogInButtonExpectedValues = new existLogInButtonExpectedValues();
                }
                return this.mexistLogInButtonExpectedValues;
            }
        }
        
        public virtual existPacientNameColumnExpectedValues existPacientNameColumnExpectedValues
        {
            get
            {
                if ((this.mexistPacientNameColumnExpectedValues == null))
                {
                    this.mexistPacientNameColumnExpectedValues = new existPacientNameColumnExpectedValues();
                }
                return this.mexistPacientNameColumnExpectedValues;
            }
        }
        
        public virtual existPasswordInputExpectedValues existPasswordInputExpectedValues
        {
            get
            {
                if ((this.mexistPasswordInputExpectedValues == null))
                {
                    this.mexistPasswordInputExpectedValues = new existPasswordInputExpectedValues();
                }
                return this.mexistPasswordInputExpectedValues;
            }
        }
        
        public virtual existProfessionalColumnNameExpectedValues existProfessionalColumnNameExpectedValues
        {
            get
            {
                if ((this.mexistProfessionalColumnNameExpectedValues == null))
                {
                    this.mexistProfessionalColumnNameExpectedValues = new existProfessionalColumnNameExpectedValues();
                }
                return this.mexistProfessionalColumnNameExpectedValues;
            }
        }
        
        public virtual existTimeColumnExpectedValues existTimeColumnExpectedValues
        {
            get
            {
                if ((this.mexistTimeColumnExpectedValues == null))
                {
                    this.mexistTimeColumnExpectedValues = new existTimeColumnExpectedValues();
                }
                return this.mexistTimeColumnExpectedValues;
            }
        }
        
        public virtual loginParams loginParams
        {
            get
            {
                if ((this.mloginParams == null))
                {
                    this.mloginParams = new loginParams();
                }
                return this.mloginParams;
            }
        }
        
        public virtual openApplicationHomePageParams openApplicationHomePageParams
        {
            get
            {
                if ((this.mopenApplicationHomePageParams == null))
                {
                    this.mopenApplicationHomePageParams = new openApplicationHomePageParams();
                }
                return this.mopenApplicationHomePageParams;
            }
        }
        
        public UINuevapestañaGoogleChWindow UINuevapestañaGoogleChWindow
        {
            get
            {
                if ((this.mUINuevapestañaGoogleChWindow == null))
                {
                    this.mUINuevapestañaGoogleChWindow = new UINuevapestañaGoogleChWindow();
                }
                return this.mUINuevapestañaGoogleChWindow;
            }
        }
        
        public UIQuieresguardarlacontWindow UIQuieresguardarlacontWindow
        {
            get
            {
                if ((this.mUIQuieresguardarlacontWindow == null))
                {
                    this.mUIQuieresguardarlacontWindow = new UIQuieresguardarlacontWindow();
                }
                return this.mUIQuieresguardarlacontWindow;
            }
        }
        #endregion
        
        #region Fields
        private existAppointmentTitleExpectedValues mexistAppointmentTitleExpectedValues;
        
        private existDateColumnExpectedValues mexistDateColumnExpectedValues;
        
        private existHiperLinkPaginaPrincipalExpectedValues mexistHiperLinkPaginaPrincipalExpectedValues;
        
        private existHiperLinkRegistrarCitaExpectedValues mexistHiperLinkRegistrarCitaExpectedValues;
        
        private existHiperLinkRegistrarPacienteExpectedValues mexistHiperLinkRegistrarPacienteExpectedValues;
        
        private existHomePageTitleExpectedValues mexistHomePageTitleExpectedValues;
        
        private existIdInputExpectedValues mexistIdInputExpectedValues;
        
        private existLogInButtonExpectedValues mexistLogInButtonExpectedValues;
        
        private existPacientNameColumnExpectedValues mexistPacientNameColumnExpectedValues;
        
        private existPasswordInputExpectedValues mexistPasswordInputExpectedValues;
        
        private existProfessionalColumnNameExpectedValues mexistProfessionalColumnNameExpectedValues;
        
        private existTimeColumnExpectedValues mexistTimeColumnExpectedValues;
        
        private loginParams mloginParams;
        
        private openApplicationHomePageParams mopenApplicationHomePageParams;
        
        private UINuevapestañaGoogleChWindow mUINuevapestañaGoogleChWindow;
        
        private UIQuieresguardarlacontWindow mUIQuieresguardarlacontWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existAppointmentTitle'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existAppointmentTitleExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' label equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooTextExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existDateColumn'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existDateColumnExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' column header equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooColumnHeaderExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existHiperLinkPaginaPrincipal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existHiperLinkPaginaPrincipalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' label equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooTextExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existHiperLinkRegistrarCita'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existHiperLinkRegistrarCitaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' label equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooTextExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existHiperLinkRegistrarPaciente'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existHiperLinkRegistrarPacienteExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' label equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooTextExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existHomePageTitle'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existHomePageTitleExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' label equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooTextExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existIdInput'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existIdInputExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' spinner equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooSpinnerExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existLogInButton'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existLogInButtonExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' button equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooButtonExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existPacientNameColumn'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existPacientNameColumnExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' column header equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooColumnHeader2Exists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existPasswordInput'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existPasswordInputExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of text box equals 'True'
        /// </summary>
        public bool UIItemEditExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existProfessionalColumnName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existProfessionalColumnNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' column header equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooColumnHeader3Exists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'existTimeColumn'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class existTimeColumnExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agenda Electrónica - Google Chrome' column header equals 'True'
        /// </summary>
        public bool UIAgendaElectrónicaGooColumnHeader1Exists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'login'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class loginParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Google\Chrome\Application\chrome.exe'
        /// </summary>
        public string UINuevapestañaGoogleChWindowExePath = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Google\Chrome\Application\chrome.exe'
        /// </summary>
        public string UINuevapestañaGoogleChWindowAlternateExePath = "%ProgramFiles(x86)%\\Google\\Chrome\\Application\\chrome.exe";
        
        /// <summary>
        /// Type 'localhost/ElectronicNotebook/' in 'Barra de direcciones y de búsqueda' text box
        /// </summary>
        public string UIBarradedireccionesydEditText = "localhost/ElectronicNotebook/";
        
        /// <summary>
        /// Type '{Enter}' in 'Barra de direcciones y de búsqueda' text box
        /// </summary>
        public string UIBarradedireccionesydEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Type '{Tab}{Tab}{Tab}{Tab}{Tab}{Tab}{Tab}{Enter}' in 'Chrome Legacy Window' document
        /// </summary>
        public string UIChromeLegacyWindowDocumentSendKeys = "{Tab}{Tab}{Tab}{Tab}{Tab}{Tab}{Tab}{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'openApplicationHomePage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class openApplicationHomePageParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Google\Chrome\Application\chrome.exe'
        /// </summary>
        public string UINuevapestañaGoogleChWindowExePath = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Google\Chrome\Application\chrome.exe'
        /// </summary>
        public string UINuevapestañaGoogleChWindowAlternateExePath = "%ProgramFiles(x86)%\\Google\\Chrome\\Application\\chrome.exe";
        
        /// <summary>
        /// Type 'localhost/ElectronicNotebook/' in 'Barra de direcciones y de búsqueda' text box
        /// </summary>
        public string UIBarradedireccionesydEditText = "localhost/ElectronicNotebook/";
        
        /// <summary>
        /// Type '{Enter}' in 'Barra de direcciones y de búsqueda' text box
        /// </summary>
        public string UIBarradedireccionesydEditSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UINuevapestañaGoogleChWindow : WinWindow
    {
        
        public UINuevapestañaGoogleChWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Nueva pestaña - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("Nueva pestaña - Google Chrome");
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            this.WindowTitles.Add("localhost/ElectronicNotebook/ - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIItemGroup UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup(this);
                }
                return this.mUIItemGroup;
            }
        }
        
        public UIPáginaprincipalHyperlink UIPáginaprincipalHyperlink
        {
            get
            {
                if ((this.mUIPáginaprincipalHyperlink == null))
                {
                    this.mUIPáginaprincipalHyperlink = new UIPáginaprincipalHyperlink(this);
                }
                return this.mUIPáginaprincipalHyperlink;
            }
        }
        
        public UIRegistrarcitaHyperlink UIRegistrarcitaHyperlink
        {
            get
            {
                if ((this.mUIRegistrarcitaHyperlink == null))
                {
                    this.mUIRegistrarcitaHyperlink = new UIRegistrarcitaHyperlink(this);
                }
                return this.mUIRegistrarcitaHyperlink;
            }
        }
        
        public UIRegistrarpacienteHyperlink UIRegistrarpacienteHyperlink
        {
            get
            {
                if ((this.mUIRegistrarpacienteHyperlink == null))
                {
                    this.mUIRegistrarpacienteHyperlink = new UIRegistrarpacienteHyperlink(this);
                }
                return this.mUIRegistrarpacienteHyperlink;
            }
        }
        
        public UIIniciodeSesiónGroup UIIniciodeSesiónGroup
        {
            get
            {
                if ((this.mUIIniciodeSesiónGroup == null))
                {
                    this.mUIIniciodeSesiónGroup = new UIIniciodeSesiónGroup(this);
                }
                return this.mUIIniciodeSesiónGroup;
            }
        }
        
        public UIChromeLegacyWindowWindow UIChromeLegacyWindowWindow
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow == null))
                {
                    this.mUIChromeLegacyWindowWindow = new UIChromeLegacyWindowWindow(this);
                }
                return this.mUIChromeLegacyWindowWindow;
            }
        }
        
        public UICitasPróximasGroup UICitasPróximasGroup
        {
            get
            {
                if ((this.mUICitasPróximasGroup == null))
                {
                    this.mUICitasPróximasGroup = new UICitasPróximasGroup(this);
                }
                return this.mUICitasPróximasGroup;
            }
        }
        
        public UIChromeLegacyWindowWindow1 UIChromeLegacyWindowWindow1
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow1 == null))
                {
                    this.mUIChromeLegacyWindowWindow1 = new UIChromeLegacyWindowWindow1(this);
                }
                return this.mUIChromeLegacyWindowWindow1;
            }
        }
        
        public UIItemGroup1 UIItemGroup1
        {
            get
            {
                if ((this.mUIItemGroup1 == null))
                {
                    this.mUIItemGroup1 = new UIItemGroup1(this);
                }
                return this.mUIItemGroup1;
            }
        }
        
        public UIItemGroup2 UIItemGroup2
        {
            get
            {
                if ((this.mUIItemGroup2 == null))
                {
                    this.mUIItemGroup2 = new UIItemGroup2(this);
                }
                return this.mUIItemGroup2;
            }
        }
        
        public UIChromeLegacyWindowWindow2 UIChromeLegacyWindowWindow2
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow2 == null))
                {
                    this.mUIChromeLegacyWindowWindow2 = new UIChromeLegacyWindowWindow2(this);
                }
                return this.mUIChromeLegacyWindowWindow2;
            }
        }
        
        public UIChromeLegacyWindowDocument UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new UIChromeLegacyWindowDocument(this);
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        
        public UIChromeLegacyWindowWindow3 UIChromeLegacyWindowWindow3
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow3 == null))
                {
                    this.mUIChromeLegacyWindowWindow3 = new UIChromeLegacyWindowWindow3(this);
                }
                return this.mUIChromeLegacyWindowWindow3;
            }
        }
        
        public UIChromeLegacyWindowWindow4 UIChromeLegacyWindowWindow4
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow4 == null))
                {
                    this.mUIChromeLegacyWindowWindow4 = new UIChromeLegacyWindowWindow4(this);
                }
                return this.mUIChromeLegacyWindowWindow4;
            }
        }
        
        public WinCustom UIAgendaElectrónicaGooCustom
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooCustom == null))
                {
                    this.mUIAgendaElectrónicaGooCustom = new WinCustom(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooCustom.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooCustom;
            }
        }
        
        public UIChromeLegacyWindowWindow5 UIChromeLegacyWindowWindow5
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow5 == null))
                {
                    this.mUIChromeLegacyWindowWindow5 = new UIChromeLegacyWindowWindow5(this);
                }
                return this.mUIChromeLegacyWindowWindow5;
            }
        }
        
        public UIChromeLegacyWindowWindow6 UIChromeLegacyWindowWindow6
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow6 == null))
                {
                    this.mUIChromeLegacyWindowWindow6 = new UIChromeLegacyWindowWindow6(this);
                }
                return this.mUIChromeLegacyWindowWindow6;
            }
        }
        
        public UIChromeLegacyWindowWindow7 UIChromeLegacyWindowWindow7
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow7 == null))
                {
                    this.mUIChromeLegacyWindowWindow7 = new UIChromeLegacyWindowWindow7(this);
                }
                return this.mUIChromeLegacyWindowWindow7;
            }
        }
        
        public UIChromeLegacyWindowWindow8 UIChromeLegacyWindowWindow8
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow8 == null))
                {
                    this.mUIChromeLegacyWindowWindow8 = new UIChromeLegacyWindowWindow8(this);
                }
                return this.mUIChromeLegacyWindowWindow8;
            }
        }
        
        public UIChromeLegacyWindowWindow9 UIChromeLegacyWindowWindow9
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow9 == null))
                {
                    this.mUIChromeLegacyWindowWindow9 = new UIChromeLegacyWindowWindow9(this);
                }
                return this.mUIChromeLegacyWindowWindow9;
            }
        }
        
        public UIChromeLegacyWindowWindow10 UIChromeLegacyWindowWindow10
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow10 == null))
                {
                    this.mUIChromeLegacyWindowWindow10 = new UIChromeLegacyWindowWindow10(this);
                }
                return this.mUIChromeLegacyWindowWindow10;
            }
        }
        
        public UIChromeLegacyWindowWindow11 UIChromeLegacyWindowWindow11
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow11 == null))
                {
                    this.mUIChromeLegacyWindowWindow11 = new UIChromeLegacyWindowWindow11(this);
                }
                return this.mUIChromeLegacyWindowWindow11;
            }
        }
        
        public UIChromeLegacyWindowWindow12 UIChromeLegacyWindowWindow12
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow12 == null))
                {
                    this.mUIChromeLegacyWindowWindow12 = new UIChromeLegacyWindowWindow12(this);
                }
                return this.mUIChromeLegacyWindowWindow12;
            }
        }
        
        public UIChromeLegacyWindowWindow13 UIChromeLegacyWindowWindow13
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow13 == null))
                {
                    this.mUIChromeLegacyWindowWindow13 = new UIChromeLegacyWindowWindow13(this);
                }
                return this.mUIChromeLegacyWindowWindow13;
            }
        }
        
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public UIChromeLegacyWindowWindow14 UIChromeLegacyWindowWindow14
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow14 == null))
                {
                    this.mUIChromeLegacyWindowWindow14 = new UIChromeLegacyWindowWindow14(this);
                }
                return this.mUIChromeLegacyWindowWindow14;
            }
        }
        
        public UIChromeLegacyWindowWindow15 UIChromeLegacyWindowWindow15
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow15 == null))
                {
                    this.mUIChromeLegacyWindowWindow15 = new UIChromeLegacyWindowWindow15(this);
                }
                return this.mUIChromeLegacyWindowWindow15;
            }
        }
        
        public UIChromeLegacyWindowWindow16 UIChromeLegacyWindowWindow16
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow16 == null))
                {
                    this.mUIChromeLegacyWindowWindow16 = new UIChromeLegacyWindowWindow16(this);
                }
                return this.mUIChromeLegacyWindowWindow16;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGroup mUIItemGroup;
        
        private UIPáginaprincipalHyperlink mUIPáginaprincipalHyperlink;
        
        private UIRegistrarcitaHyperlink mUIRegistrarcitaHyperlink;
        
        private UIRegistrarpacienteHyperlink mUIRegistrarpacienteHyperlink;
        
        private UIIniciodeSesiónGroup mUIIniciodeSesiónGroup;
        
        private UIChromeLegacyWindowWindow mUIChromeLegacyWindowWindow;
        
        private UICitasPróximasGroup mUICitasPróximasGroup;
        
        private UIChromeLegacyWindowWindow1 mUIChromeLegacyWindowWindow1;
        
        private UIItemGroup1 mUIItemGroup1;
        
        private UIItemGroup2 mUIItemGroup2;
        
        private UIChromeLegacyWindowWindow2 mUIChromeLegacyWindowWindow2;
        
        private UIChromeLegacyWindowDocument mUIChromeLegacyWindowDocument;
        
        private UIChromeLegacyWindowWindow3 mUIChromeLegacyWindowWindow3;
        
        private UIChromeLegacyWindowWindow4 mUIChromeLegacyWindowWindow4;
        
        private WinCustom mUIAgendaElectrónicaGooCustom;
        
        private UIChromeLegacyWindowWindow5 mUIChromeLegacyWindowWindow5;
        
        private UIChromeLegacyWindowWindow6 mUIChromeLegacyWindowWindow6;
        
        private UIChromeLegacyWindowWindow7 mUIChromeLegacyWindowWindow7;
        
        private UIChromeLegacyWindowWindow8 mUIChromeLegacyWindowWindow8;
        
        private UIChromeLegacyWindowWindow9 mUIChromeLegacyWindowWindow9;
        
        private UIChromeLegacyWindowWindow10 mUIChromeLegacyWindowWindow10;
        
        private UIChromeLegacyWindowWindow11 mUIChromeLegacyWindowWindow11;
        
        private UIChromeLegacyWindowWindow12 mUIChromeLegacyWindowWindow12;
        
        private UIChromeLegacyWindowWindow13 mUIChromeLegacyWindowWindow13;
        
        private UIItemTable mUIItemTable;
        
        private UIChromeLegacyWindowWindow14 mUIChromeLegacyWindowWindow14;
        
        private UIChromeLegacyWindowWindow15 mUIChromeLegacyWindowWindow15;
        
        private UIChromeLegacyWindowWindow16 mUIChromeLegacyWindowWindow16;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIItemGroup : WinGroup
    {
        
        public UIItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Nueva pestaña - Google Chrome");
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinEdit UIBarradedireccionesydEdit
        {
            get
            {
                if ((this.mUIBarradedireccionesydEdit == null))
                {
                    this.mUIBarradedireccionesydEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIBarradedireccionesydEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Barra de direcciones y de búsqueda";
                    this.mUIBarradedireccionesydEdit.WindowTitles.Add("Nueva pestaña - Google Chrome");
                    this.mUIBarradedireccionesydEdit.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIBarradedireccionesydEdit;
            }
        }
        
        public WinSpinner UIAgendaElectrónicaGooSpinner
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooSpinner == null))
                {
                    this.mUIAgendaElectrónicaGooSpinner = new WinSpinner(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooSpinner.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooSpinner;
            }
        }
        
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WinButton UIAgendaElectrónicaGooButton
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooButton == null))
                {
                    this.mUIAgendaElectrónicaGooButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooButton.SearchProperties[WinButton.PropertyNames.Name] = "Inicio de Sesión";
                    this.mUIAgendaElectrónicaGooButton.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooButton;
            }
        }
        
        public WinEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public WinEdit UIFechaEdit
        {
            get
            {
                if ((this.mUIFechaEdit == null))
                {
                    this.mUIFechaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFechaEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Fecha";
                    this.mUIFechaEdit.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIFechaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIBarradedireccionesydEdit;
        
        private WinSpinner mUIAgendaElectrónicaGooSpinner;
        
        private WinEdit mUIItemEdit;
        
        private WinButton mUIAgendaElectrónicaGooButton;
        
        private WinEdit mUIItemEdit1;
        
        private WinEdit mUIFechaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIPáginaprincipalHyperlink : WinHyperlink
    {
        
        public UIPáginaprincipalHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Página principal";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinText UIAgendaElectrónicaGooText
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooText == null))
                {
                    this.mUIAgendaElectrónicaGooText = new WinText(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooText.SearchProperties[WinText.PropertyNames.Name] = "Página principal";
                    this.mUIAgendaElectrónicaGooText.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIAgendaElectrónicaGooText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIRegistrarcitaHyperlink : WinHyperlink
    {
        
        public UIRegistrarcitaHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Registrar cita";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinText UIAgendaElectrónicaGooText
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooText == null))
                {
                    this.mUIAgendaElectrónicaGooText = new WinText(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooText.SearchProperties[WinText.PropertyNames.Name] = "Registrar cita";
                    this.mUIAgendaElectrónicaGooText.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIAgendaElectrónicaGooText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIRegistrarpacienteHyperlink : WinHyperlink
    {
        
        public UIRegistrarpacienteHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Registrar paciente";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinText UIAgendaElectrónicaGooText
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooText == null))
                {
                    this.mUIAgendaElectrónicaGooText = new WinText(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooText.SearchProperties[WinText.PropertyNames.Name] = "Registrar paciente";
                    this.mUIAgendaElectrónicaGooText.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIAgendaElectrónicaGooText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIIniciodeSesiónGroup : WinGroup
    {
        
        public UIIniciodeSesiónGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Inicio de Sesión";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinText UIAgendaElectrónicaGooText
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooText == null))
                {
                    this.mUIAgendaElectrónicaGooText = new WinText(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooText.SearchProperties[WinText.PropertyNames.Name] = "Inicio de Sesión";
                    this.mUIAgendaElectrónicaGooText.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIAgendaElectrónicaGooText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow : WinWindow
    {
        
        public UIChromeLegacyWindowWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "95593856";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UICitasPróximasGroup : WinGroup
    {
        
        public UICitasPróximasGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Citas Próximas";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinText UIAgendaElectrónicaGooText
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooText == null))
                {
                    this.mUIAgendaElectrónicaGooText = new WinText(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooText.SearchProperties[WinText.PropertyNames.Name] = "Citas Próximas";
                    this.mUIAgendaElectrónicaGooText.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIAgendaElectrónicaGooText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow1 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "107339904";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIItemGroup1 : WinGroup
    {
        
        public UIItemGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WinEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public WinSpinner UIItemSpinner
        {
            get
            {
                if ((this.mUIItemSpinner == null))
                {
                    this.mUIItemSpinner = new WinSpinner(this);
                    #region Search Criteria
                    this.mUIItemSpinner.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIItemSpinner;
            }
        }
        
        public WinButton UIAgendaElectrónicaGooButton
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooButton == null))
                {
                    this.mUIAgendaElectrónicaGooButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooButton.SearchProperties[WinButton.PropertyNames.Name] = "Inicio de Sesión";
                    this.mUIAgendaElectrónicaGooButton.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooButton;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        
        private WinEdit mUIItemEdit1;
        
        private WinSpinner mUIItemSpinner;
        
        private WinButton mUIAgendaElectrónicaGooButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIItemGroup2 : WinGroup
    {
        
        public UIItemGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinButton UIAgendaElectrónicaGooButton
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooButton == null))
                {
                    this.mUIAgendaElectrónicaGooButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooButton.SearchProperties[WinButton.PropertyNames.Name] = "Inicio de Sesión";
                    this.mUIAgendaElectrónicaGooButton.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAgendaElectrónicaGooButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow2 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "102037120";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowDocument : WinControl
    {
        
        public UIChromeLegacyWindowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinGroup UIAgendaElectrónicaGooGroup
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooGroup == null))
                {
                    this.mUIAgendaElectrónicaGooGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooGroup.SearchProperties[WinControl.PropertyNames.Instance] = "2";
                    this.mUIAgendaElectrónicaGooGroup.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIAgendaElectrónicaGooGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow3 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "132889632";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIChromeLegacyWindowDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIChromeLegacyWindowDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIChromeLegacyWindowDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow4 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "101260960";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow5 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "105283904";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow6 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "99718976";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow7 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "98419776";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow8 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "137633376";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow9 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "106212416";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow10 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "171127168";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow11 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "133819328";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIChromeLegacyWindowDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIChromeLegacyWindowDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow12 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100496832";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIChromeLegacyWindowDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIChromeLegacyWindowDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow13 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "4661184";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIChromeLegacyWindowDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIChromeLegacyWindowDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIItemTable : WinTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIItemRow UIItemRow
        {
            get
            {
                if ((this.mUIItemRow == null))
                {
                    this.mUIItemRow = new UIItemRow(this);
                }
                return this.mUIItemRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemRow mUIItemRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIItemRow : WinRow
    {
        
        public UIItemRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinColumnHeader UIAgendaElectrónicaGooColumnHeader
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooColumnHeader == null))
                {
                    this.mUIAgendaElectrónicaGooColumnHeader = new WinColumnHeader(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooColumnHeader.SearchProperties[WinControl.PropertyNames.Name] = "Fecha";
                    this.mUIAgendaElectrónicaGooColumnHeader.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooColumnHeader;
            }
        }
        
        public WinColumnHeader UIAgendaElectrónicaGooColumnHeader1
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooColumnHeader1 == null))
                {
                    this.mUIAgendaElectrónicaGooColumnHeader1 = new WinColumnHeader(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooColumnHeader1.SearchProperties[WinControl.PropertyNames.Name] = "Hora";
                    this.mUIAgendaElectrónicaGooColumnHeader1.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooColumnHeader1;
            }
        }
        
        public WinColumnHeader UIAgendaElectrónicaGooColumnHeader2
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooColumnHeader2 == null))
                {
                    this.mUIAgendaElectrónicaGooColumnHeader2 = new WinColumnHeader(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooColumnHeader2.SearchProperties[WinControl.PropertyNames.Name] = "Nombre del paciente";
                    this.mUIAgendaElectrónicaGooColumnHeader2.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooColumnHeader2;
            }
        }
        
        public WinColumnHeader UIAgendaElectrónicaGooColumnHeader3
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooColumnHeader3 == null))
                {
                    this.mUIAgendaElectrónicaGooColumnHeader3 = new WinColumnHeader(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooColumnHeader3.SearchProperties[WinControl.PropertyNames.Name] = "Nombre del profesional que atiende";
                    this.mUIAgendaElectrónicaGooColumnHeader3.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooColumnHeader3;
            }
        }
        #endregion
        
        #region Fields
        private WinColumnHeader mUIAgendaElectrónicaGooColumnHeader;
        
        private WinColumnHeader mUIAgendaElectrónicaGooColumnHeader1;
        
        private WinColumnHeader mUIAgendaElectrónicaGooColumnHeader2;
        
        private WinColumnHeader mUIAgendaElectrónicaGooColumnHeader3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow14 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "107709568";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIAgendaElectrónicaGooDocument
        {
            get
            {
                if ((this.mUIAgendaElectrónicaGooDocument == null))
                {
                    this.mUIAgendaElectrónicaGooDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Agenda Electrónica";
                    this.mUIAgendaElectrónicaGooDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIAgendaElectrónicaGooDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIAgendaElectrónicaGooDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIAgendaElectrónicaGooDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow15 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "134864000";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIChromeLegacyWindowDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIChromeLegacyWindowDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIChromeLegacyWindowWindow16 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "33485312";
            this.WindowTitles.Add("Agenda Electrónica - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIChromeLegacyWindowDocument.WindowTitles.Add("Agenda Electrónica - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIChromeLegacyWindowDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIQuieresguardarlacontWindow : WinWindow
    {
        
        public UIQuieresguardarlacontWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "¿Quieres guardar la contraseña?";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("¿Quieres guardar la contraseña?");
            #endregion
        }
        
        #region Properties
        public UIItemPane UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new UIItemPane(this);
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItemPane mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIItemPane : WinPane
    {
        
        public UIItemPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("¿Quieres guardar la contraseña?");
            #endregion
        }
        
        #region Properties
        public WinButton UINuncaButton
        {
            get
            {
                if ((this.mUINuncaButton == null))
                {
                    this.mUINuncaButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINuncaButton.SearchProperties[WinButton.PropertyNames.Name] = "Nunca";
                    this.mUINuncaButton.WindowTitles.Add("¿Quieres guardar la contraseña?");
                    #endregion
                }
                return this.mUINuncaButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINuncaButton;
        #endregion
    }
}
